I"	<p>React class components can manage data with built in state and props, but when more complex data is used in an application,  Redux can also help manage it. However, Redux is very verbose and so Hooks can help reduce lines of code, which is why it has become the standard way to manage application data in React. The Hooks that I will be exploring are <code class="language-plaintext highlighter-rouge">useState()</code>, <code class="language-plaintext highlighter-rouge">useEffect()</code>, <a href="https://dev.to/santispavajeau/refactoring-apps-from-class-based-react-with-redux-to-functional-hooks-part-2-l14"><code class="language-plaintext highlighter-rouge">useSelector()</code>, and <code class="language-plaintext highlighter-rouge">useDispatch()</code> Part 2</a> as using these will allow a working refactor from class-based React with Redux. But lets start with <code class="language-plaintext highlighter-rouge">useState()</code> and <code class="language-plaintext highlighter-rouge">useEffect()</code> for now.</p>
:ET